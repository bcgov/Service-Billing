@model Service_Billing.Models.ServiceCategory
@{
    ViewData["Title"] = "Service Category Details";
    Layout = "_Layout";
}
@{
    var isNew = (ViewData["isNew"] != null && (bool?)ViewData["isNew"] == true) ? "true" : "false";
    var isEdited = (ViewData["isEdited"] != null && (bool?)ViewData["isEdited"] == true) ? "true" : "false";
    var serviceName = !String.IsNullOrEmpty(Model.Name) ? Model.Name : string.Empty;
    IEnumerable<ChangeLogEntry>? changeLogs = ViewData["ChangeLogs"] as IEnumerable<ChangeLogEntry>;
}
<h1>Details</h1>
<div>
    <h4>ServiceCategory</h4>
    <hr />
    <table>
        <tr>
            <td class="table-left">
                @Html.DisplayNameFor(model => model.BusArea.Acronym)
            </td>
            <td>
                @Html.DisplayFor(model => model.BusArea.Acronym)
            </td>
        </tr>
        <tr>
            <td class="table-left">
                @Html.DisplayNameFor(model => model.Name)
            </td>
            <td>
                @Html.DisplayFor(model => model.Name)
            </td>
        </tr>
        <tr>
            <td class="table-left">
                @Html.DisplayNameFor(model => model.Costs)
            </td>
            <td>
                $@Html.DisplayFor(model => model.Costs)
            </td>
        </tr>
        <tr>
            <td class="table-left">
                @Html.DisplayNameFor(model => model.Description)
            </td>
            <td>
                @Html.DisplayFor(model => model.Description)
            </td>
        </tr>
        <tr>
            <td class="table-left">
                @Html.DisplayNameFor(model => model.IsActive)
            </td>
            <td>
                @Html.DisplayFor(model => model.IsActive)
            </td>
        </tr>
        <tr>
            <td class="table-left">
                @Html.DisplayNameFor(model => model.UOM)
            </td>
            <td>
                @Html.DisplayFor(model => model.UOM)
            </td>
        </tr>
        <tr>
            <td class="table-left">
                @Html.DisplayNameFor(model => model.ServiceOwner)
            </td>
            <td>
                @Html.DisplayFor(model => model.ServiceOwner)
            </td>
        </tr>
    </table>
</div>
@if (changeLogs != null && changeLogs.Any())
{
    <h4>Change logs</h4>
    <div id="change-logs">
        @foreach (ChangeLogEntry logEntry in changeLogs)
        {
            <div>
                <div class="change-log-time-stamp">
                    @logEntry.DateModified.DateTime.ToString("MMMM dd, yyyy hh:mm tt")
                </div>
                <p>Changed by @logEntry.ChangedBy</p>
                <p>@Html.Raw(logEntry.LogEntry)</p>
            </div>
        }
    </div>
}
<div class="bottom-nav">
    <button type="button" class="btn btn-primary" onclick="location.href='@Url.Action("Edit", "ServiceCategory", new {id = Model.ServiceId})'" ">Edit</button>
    <button type="button" class="btn btn-secondary" onclick="location.href='@Url.Action("Index", "ServiceCategory")'" ">View Service Categories</button>
</div>
@* @section Scripts {
    <script>
        $(document).ready(() => {
            if (@isNew) {
                $("#toast-title-text").html("Service Created");
                $("#toast-header-small-text").html("New Service Category created");
                $("#toast-body").html(`New service category <i>${"@Model.Name"}</i> has been added to the billing system`);
                $("#info-toast").toast("show");
            }
            if (@isEdited) {
                $("#toast-title-text").html("Service Updated");
                $("#toast-header-small-text").html(`${"@Model.Name"}`);
                $("#toast-body").html(`Service Category <i>${"@Model.Name"}</i> has been successfully updated`);
                $("#info-toast").toast("show");
            }
        });
    </script>
} *@
