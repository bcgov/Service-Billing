@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@model Service_Billing.Models.Bill
@{
    ViewData["Title"] = "Charge Details";
    ServiceCategory? serviceCategory = ViewData["serviceCategory"] as ServiceCategory;
    ClientAccount? clientAccount = ViewData["clientAccount"] as ClientAccount;
    FiscalHistory? fiscalHistory = ViewData["historyData"] != null ? ViewData["historyData"] as FiscalHistory : null;
    var isNew = (ViewData["isNew"] != null && (bool?)ViewData["isNew"] == true) ? "true" : "false";
    var isEdited = (ViewData["isEdited"] != null && (bool?)ViewData["isEdited"] == true) ? "true" : "false";
    var clientName = clientAccount?.Name;
}
<h1>Details</h1>
<div>
    <h4>@Model.Id - @Model.Title</h4>
    @if (fiscalHistory != null)
    {
        <h4>Historical record for @ViewData["periodString"]</h4>
    }
    <hr />
    <table>
        <tr>
            <td class="table-left">
                Client Account
            </td>
            <td>
                @if (clientAccount != null)
                {
                    <a asp-controller="ClientAccount"
                       asp-action="Details"
                       asp-route-id="@clientAccount.Id">@clientAccount.Name</a>
                }
            </td>
        </tr>
        <tr>
            <td class="table-left">
                @Html.DisplayNameFor(model => model.Id)
            </td>
            <td>
                @Html.DisplayFor(model => model.Id)
            </td>
        </tr>
        <tr>
            <td class="table-left">
                @Html.DisplayNameFor(model => model.Title)
            </td>
            <td>
                @Html.DisplayFor(model => model.Title)
            </td>
        </tr>
        <tr>
            <td class="table-left">
                @Html.DisplayNameFor(model => model.IdirOrUrl)
            </td>
            <td>
                @if (!String.IsNullOrEmpty(Model.IdirOrUrl) && Model.IdirOrUrl.ToLower().StartsWith("http"))
                {
                    <a href="@Model.IdirOrUrl" target="blank">@Html.DisplayFor(model => model.IdirOrUrl)</a>
                }
                else if (!String.IsNullOrEmpty(Model.IdirOrUrl))
                {
                    @Model.IdirOrUrl
                }
                else
                {
                    <br />
                }
            </td>
        </tr>
        <tr>
            <td class="table-left">
                Service Category
            </td>
            <td>
                @if (serviceCategory != null && !String.IsNullOrEmpty(serviceCategory.Name))
                {
                    @serviceCategory.Name
                }
            </td>
        </tr>
        <tr>
            <td class="table-left">
                Most Recent Period
            </td>
            <td>
                @Html.DisplayFor(model => model.MostRecentActiveFiscalPeriod.Period)
            </td>
        </tr>
        <tr>
            @if (fiscalHistory != null)
            {
                <td class="table-left">
                    Quantity for @ViewData["periodString"]
                </td>
                <td>
                    @fiscalHistory.QuantityAtFiscal
                </td>
            }
            else
            {
                <td class="table-left">
                    @Html.DisplayNameFor(model => model.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Quantity)
                </td>
            }
        </tr>
        <tr>
            <td class="table-left">
                Unit of Measure
            </td>
            @if (serviceCategory != null && !String.IsNullOrEmpty(serviceCategory.UOM))
            {
                if (string.CompareOrdinal(serviceCategory.UOM, "Hr") == 0)
                {
                    <td>
                        Hour
                    </td>
                }
                else
                {
                    <td> @serviceCategory.UOM</td>
                }
            }
            else
            {
                <br />
            }
        </tr>
        <tr>
            <td class="table-left">
                Expense Authority
            </td>
            <td>
                @if (clientAccount != null && !String.IsNullOrEmpty(clientAccount.ExpenseAuthorityName))
                {
                    @clientAccount.ExpenseAuthorityName

                    <br />
                }
                else
                {
                    <br />
                }
            </td>
        </tr>
        <tr>
            <td class="table-left">
                @Html.DisplayNameFor(model => model.StartDate)
            </td>
            <td>
                @Html.DisplayFor(model => model.StartDate)
            </td>
        </tr>
        <tr>
            <td class="table-left">
                @Html.DisplayNameFor(model => model.EndDate)
            </td>
            <td>
                @Html.DisplayFor(model => model.EndDate)
            </td>
        </tr>
        <tr>
            <td class="table-left">
                @Html.DisplayNameFor(model => model.TicketNumberAndRequester)
            </td>
            <td>
                @if (!String.IsNullOrEmpty(Model.TicketNumberAndRequester))
                {
                    @Html.DisplayFor(model => model.TicketNumberAndRequester)
                }
                else
                {
                    <br />
                }
            </td>
        </tr>
        <tr>
            <td class="table-left">
                @Html.DisplayNameFor(model => model.CreatedBy)
            </td>
            <td>
                @if (!String.IsNullOrEmpty(Model.CreatedBy))
                {
                    @Html.DisplayFor(model => model.CreatedBy)
                }
                else
                {
                    <br />
                }
            </td>
        </tr>
        <tr>
            <td class="table-left">
                Aggregate GL Code
            </td>
            <td>
                @Model.ClientAccount?.AggregatedGLCode
            </td>

        </tr>
        <tr>
            @if (fiscalHistory != null)
            {
                <td class="table-left">
                    Notes for @ViewData["periodString"]
                </td>
                <td>
                    @fiscalHistory.Notes
                </td>
            }
            else
            {
                <td class="table-left">
                    @Html.DisplayNameFor(model => Model.Notes)
                </td>
                <td>
                    @Html.DisplayFor(model => Model.Notes)
                </td>
            }
        </tr>
    </table>
</div>

<div class="bottom-nav">
    @if (!User.IsInRole("GDXBillingService.User"))
    {
        @Html.ActionLink("Edit", "Edit", "Bills", new { id = Model?.Id, historyId = @fiscalHistory?.Id })
    }
</div>

@* @section Scripts {
    <script>
        $(document).ready(() => {
            if (@isNew) {
                $("#toast-title-text").html("Charge Created");
                $("#toast-header-small-text").html("New charge created");
                $("#toast-body").html(`Your new charge, <i>${"@Model.Title"}</i> was created, and entered in the database`);
                $("#info-toast").toast("show");
            }
            if (@isEdited) {
                $("#toast-title-text").html("Charge Updated");
                $("#toast-header-small-text").html(`<i>${"@Model.Title"}</i>`);
                $("#toast-body").html(`Charge <i>${"@Model.Title"}</i> has been successfully updated`);
                $("#info-toast").toast("show");
            }
        });
    </script>
} *@
