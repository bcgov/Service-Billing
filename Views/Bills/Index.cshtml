@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@using Service_Billing.ViewModels;
@using System.Security.Claims

@{
    ViewData["Title"] = "Quarterly Report";
    Layout = "_Layout";
}

@{
    IEnumerable<Ministry> ministries = ViewData["Ministries"] as IEnumerable<Ministry>;
    ChargeIndexSearchParamsModel searchModel = ViewData["searchModel"] as ChargeIndexSearchParamsModel;
    if (string.IsNullOrEmpty(searchModel?.QuarterFilter))
        searchModel.QuarterFilter = "Current Quarter";
    bool current = searchModel.QuarterFilter == "current";
    bool previous = searchModel.QuarterFilter == "previous";
    bool next = searchModel.QuarterFilter == "next";
    bool all = searchModel.QuarterFilter == "all";
    List<SelectListItem> serviceCategories = new List<SelectListItem>();
    List<SelectListItem> businessAreas = new List<SelectListItem>();


    /* I'm not sure if these will get used. Not quite sure how to filter by business area, and service category yet.*/
    foreach (ServiceCategory serviceCategory in ViewBag.ServiceCategories)
    {
        serviceCategories.Add(new SelectListItem
                { Value = serviceCategory.ServiceId.ToString(), Text = serviceCategory.Name, Selected = (searchModel.CategoryFilter != null && searchModel.CategoryFilter.Contains(serviceCategory.ServiceId)) }
        );
    }
    foreach (BusinessArea businessArea in ViewBag.BusAreas)
    {
        businessAreas.Add(new SelectListItem { Value = businessArea.Id.ToString(), Text = businessArea.Name });
    }

}

<h1>Service Billing Charges</h1>

<div>

    <h2>@searchModel?.QuarterFilter: @ViewData["FiscalPeriod"]</h2>
    @if (!User.IsInRole("GDXBillingService.User"))
    {
        <div class="table-filter-section">
            <form asp-action="Index" method="get">
                <fieldset>
                    <legend>Filter by...</legend>
                    <div class="ui-section">
                        <div>
                            <div id="quarter-select">
                                <label for="quarterFilter">Select Quarter</label>
                                <select name="quarterFilter">
                                    <option value="current" selected="@current">Current</option>
                                    <option value="previous" selected="@previous">Previous</option>
                                    <option value="next" selected="@next">Next</option>
                                    <option value="all" selected="@all">All</option>
                                </select>
                            </div>

                            <label for="ministryFilter">Organization</label>
                            <select name="ministryFilter" title="Ministry or other organization charges">
                                <option value="" selected>All (no filter)</option>
                                @if (ministries != null)
                                {
                                    foreach (Ministry ministry in ministries)
                                    {
                                        if (searchModel?.MinistryFilter > 0 && searchModel?.MinistryFilter == ministry.Id)
                                        {
                                            <option selected="true" value="@ministry.Id">@ministry.Acronym - @ministry.Title</option>
                                        }
                                        else
                                        {
                                            <option value="@ministry.Id">@ministry.Acronym - @ministry.Title</option>
                                        }
                                    }
                                }
                            </select>
                            <label for="titleFilter">Program</label>
                            <input type="text" name="titleFilter" value="@searchModel?.TitleFilter" title="Search by digital asset" />
                        </div>
                        <div>
                            <label for="busAreaFilter">Business Area</label>
                            <select name="busAreaFilter" id="busAreaFilter" value="@searchModel?.BusAreaFilter">
                                <option></option>
                                @foreach (BusinessArea businessArea in ViewBag.BusAreas)
                                {
                                    if (searchModel?.BusAreaFilter != null && searchModel.BusAreaFilter == businessArea.Id)
                                    {
                                        <option value="@businessArea.Id" selected>@businessArea.Acronym - @businessArea.Name</option>
                                    }
                                    else
                                    {
                                        <option value="@businessArea.Id">@businessArea.Acronym - @businessArea.Name</option>
                                    }
                                }

                            </select>
                            <div id="category-multiselect">
                                <label for="categoryFilter">Service Category</label>
                                <select name="categoryFilter" id="categoryFilter" value="@searchModel?.CategoryFilter" multiple title="Multiple services can be selected for filtering from this list">
                                    <option value="-1"></option>
                                    @foreach (ServiceCategory category in ViewBag.ServiceCategories)
                                    {
                                        if (category.IsActive)
                                        {
                                            if (searchModel?.CategoryFilter != null && searchModel.CategoryFilter.Contains(category.ServiceId))
                                            {
                                                <option value="@category.ServiceId" selected areaId="@category.BusAreaId">@category.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@category.ServiceId" areaId="@category.BusAreaId">@category.Name</option>
                                            }
                                        }
                                    }
                                </select>
                            </div>
                            <div>
                                <label for="authorityFilter">Expense Authority</label>
                                <input type="text" name="authorityFilter" value="@searchModel?.AuthorityFilter" title="Search by ministry expense authority's first or last name" />
                                <label for="primaryContact">Primary Contact</label>
                                <input type="text" name="primaryContact" value="@searchModel?.PrimaryContact" title="Search for ministry contact's first or last name" />
                                <label for="clientNumber">GDX Client No.</label>
                                <input type="number" name="clientNumber" value="@searchModel?.ClientNumber" title="Search by GDX client number" />
                            </div>
                            <div>
                                <label for="keyword">Keyword</label>
                                <input type="text" name="keyword" value="@searchModel.Keyword"
                                       title="Search program names, URLs or notes" />
                            </div>
                        </div>
                    </div>
                    <div class="ui-section-buttons">
                        <div class="option-buttons">
                            <input type="submit" value="Filter" class="btn btn-default" /> |
                            <a asp-action="Index">Clear Filters</a>
                        </div>
                    </div>
                </fieldset>
                <div class="export-button">
                    <input type="submit" value="Export to Excel" formaction="Bills/WriteToExcel" formmethod="get" title="Based on filter settings, not necessarily what the list below displays." />
                    @if ((await AuthorizationService.AuthorizeAsync(User, "RequireFinancialOfficerRole")).Succeeded)
                    {
                        <input type="submit" value="Run Report" formaction="/Bills/ShowReport" formmethod="get" title="Based on filter settings, not necessarily what the list below displays." />
                    }
                </div>
                @if ((await AuthorizationService.AuthorizeAsync(User, "RequireFinancialOfficerRole")).Succeeded)
                {
                    <div class="create-new-button">
                        <button asp-action="AddServiceBilling" asp-controller="Bills">Create New Charge</button>
                    </div>
                }
            </form>
        </div>
    }
   
    else 
    {
        <form asp-action="Index" method="get">
        <div id="quarter-select">
            <label for="quarterFilter">Select Quarter</label>
            <select name="quarterFilter">
                <option value="current" selected="@current">Current</option>
                <option value="previous" selected="@previous">Previous</option>
                <option value="next" selected="@next">Next</option>
                <option value="all" selected="@all">All</option>
            </select>
        </div>
    </form>
    }

    <div id="chargesTable"></div>
    <div id="loading-card">
        <div class="table-loading-spanner show">
            <div class="loader"></div>
            <p>Loading...</p>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        $(document).ready(() => {
            var body = @Json.Serialize(searchModel);
            var url = "../../Bills/GetBillsTable";
            $.post(url, body, (res) => {
                $("#chargesTable").html(res);
                $("div.table-loading-spanner").addClass("hide");
                $("div.table-loading-overlay").addClass("hide");
            });
            // nav link highlighting
            $('li').removeClass("active-nav-link");
            $('#charge-index-link').addClass("active-nav-link");
        });

        $("input[type='submit']").click(function () {
            $("div.table-loading-spanner").addClass("show");
            $("div.table-loading-overlay").addClass("show");
        });

        const filterServiceCategories = (() => {
            var busAreaId = $("#busAreaFilter").val();
            $("#categoryFilter").children('option').each((index, element) => {
                if (busAreaId) {
                    if (element.getAttribute('areaId') === busAreaId) {
                        element.hidden = false;
                    } else {
                        element.selected = false;
                        element.hidden = true;
                    }
                } else {
                    element.hidden = false;
                }
            });
        });
        $("#busAreaFilter").on("change", () => {
            filterServiceCategories();
        });
        filterServiceCategories();

        $('form input').change(function () {
            $(this).closest('form').submit();
        });
        $('form select').change(function () {
            $(this).closest('form').submit();
        });
      
        addEventListener('keydown', function (event) {
            if (event.keyCode === 13 && event.target.nodeName === 'INPUT') {
                var form = event.target.form;
                var index = Array.prototype.indexOf.call(form, event.target);
                form.elements[index + 1].focus();
                event.preventDefault();
            }
        });
    </script>
}