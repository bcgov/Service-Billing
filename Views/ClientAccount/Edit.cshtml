@model Service_Billing.Models.ClientAccount

@{
    ViewData["Title"] = "Edit Client Account";
    Layout = "_Layout";
}
@{
  int i = 0; // for contact indices
}

<h1>Edit</h1>

<h4>ClientAccount</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="@Model.Name" class="control-label"></label>
                <input asp-for="@Model.Name" class="form-control" value="@Model.Name"/>
                <span asp-validation-for="@Model.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.ClientNumber" class="control-label"></label>
                <input asp-for="@Model.ClientNumber" class="form-control" value="@Model.ClientNumber" data-val="true" data-val-required="A CAS Client Number must be provided"/>
                <span asp-validation-for="@Model.ClientNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.ResponsibilityCentre" class="control-label"></label>
                <input asp-for="@Model.ResponsibilityCentre" class="form-control" value="@Model.ResponsibilityCentre" data-val="true" data-val-required="Please Provide a five character RC code"/>
                <span asp-validation-for="@Model.ResponsibilityCentre" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.ServiceLine" class="control-label"></label>
                <input asp-for="@Model.ServiceLine" class="form-control" value="@String.Format("{0:00000}", Model.ServiceLine)" maxlength="5" data-val="true" data-val-required="Please Provide a five character Service Line code" />
                <span asp-validation-for="@Model.ServiceLine" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.STOB" class="control-label"></label>
                <input asp-for="@Model.STOB" class="form-control" value="@String.Format("{0:0000}", Model.STOB)" maxlength="4" data-val-required="Please Provide a four character SToB number" />
                <span asp-validation-for="@Model.STOB" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Project" class="control-label"></label>
                <input asp-for="@Model.Project" class="form-control" value="@Model.Project" />
                <span asp-validation-for="@Model.Project" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.ExpenseAuthorityName" class="control-label"></label>
                <input asp-for="@Model.ExpenseAuthorityName" class="form-control contact-input" value="@Model.ExpenseAuthorityName" />
                <span asp-validation-for="@Model.ExpenseAuthorityName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Notes" class="control-label"></label>
                <textarea asp-for="@Model.Notes" class="form-control" value="@Model.Notes" > </textArea>
                <span asp-validation-for="@Model.Notes" class="text-danger"></span>
            </div>
                <input asp-form="@Model.Contacts" type="hidden"/>
                <label asp-for="@Model.Contacts" class="control-label">Primary Contacts</label>
                <div id="primary-contacts">
                @foreach(Contact? contact in Model.Contacts)
                {
                  if (contact.ContactType == "primary")
                  {
                    if(contact != Model.PrimaryContacts.First())
                    {      
                      <div class="form-group">
                        <input asp-for="@contact.Person.DisplayName" name="displayNames" class="form-control contact-input" class="contactInput" placeholder="start entering surname to search" />
                        <input asp-for="@contact.ContactType" name="contactTypes" type="hidden" value="primary"/>
                        <input asp-for="@contact.PersonId" name="personIds" class="id-input" />
                        <input asp-for="@contact.Person.Mail" name="emailAddresses" class="mail-input" type="hidden"readonly="true" />
                        <input asp-for="@contact.Id" name="contactIds" type="hidden" />
                      </div>
                    }
                    else
                    {
                      <div class="form-group">
                        <input asp-for="@contact.Person.DisplayName" name="displayNames" class="form-control contact-input" class="contactInput" placeholder="start entering surname to search" />
                        <input asp-for="@contact.ContactType" name="contactTypes" type="hidden" value="primary"/>
                        <input asp-for="@contact.PersonId" name="personIds" class="id-input" type="hidden"/>
                        <input asp-for="@contact.Person.Mail" name="emailAddresses" class="mail-input" type="hidden"readonly="true" />
                        <input asp-for="@contact.Id" name="contactIds" type="hidden" />
                      </div>
                    }
                  }
                }
                <a id="add-primary" onclick="addSecondPrimary()">Add a second Primary Contact?</a>
                </div>

                <span asp-validation-for="@Model.PrimaryContact" class="text-danger"></span>

                <label asp-for="@Model.Contacts" class="control-label">Approvers</label>
                
                @foreach(Contact contact in Model.Contacts)
                {
                  if (contact.ContactType == "approver")
                {   
                  <div class="form-group">
                      <input class="form-control contact-input" asp-for="@contact.Person.DisplayName" name="displayNames" id="contact_@i" placeholder="start entering surname to search" />  
                      <input asp-for="@contact.ContactType" name="contactTypes" type="hidden" value="approver"/>
                      <input asp-for="@contact.PersonId" name="personIds" class="id-input" type="hidden" />
                      <input asp-for="@contact.Person.Mail" name="emailAddresses" class="mail-input" type="hidden" />
                      <input asp-for="@contact.Id" name="contactIds" type="hidden" />
                  </div>   
                }
                  i++;
            }
                <span asp-validation-for="@Model.Contacts" class="text-danger"></span>
         

                <label asp-for="@Model.Contacts" class="control-label contact-input">Financial Contacts</label>
                @foreach(Contact contact in Model.Contacts)
                {
                  if(contact.ContactType == "financial")
                  {
                    
                  <div class="form-group">
                      <input class="form-control contact-input" asp-for="@contact.Person.DisplayName" name="displayNames" placeholder="start entering surname to search" />
                      <input asp-for="@contact.ContactType" name="contactTypes" type="hidden" value="financial"/>
                      <input asp-for="@contact.PersonId" name="personIds" class="id-input" type="hidden" />
                      <input asp-for="@contact.Person.Mail" name="emailAddresses" class="mail-input" type="hidden" />
                      <input asp-for="@contact.Id" name="contactIds"  />
                    </div>
                  }
                }
          
                <span asp-validation-for="@Model.Contacts" class="text-danger"></span>
              
                <label asp-for="@Model.IsApprovedByEA">EA Approved?</label>

                <input type="checkbox" asp-for="@Model.IsApprovedByEA" checked="@Model.IsApprovedByEA" />
                <span asp-validation-for="@Model.IsApprovedByEA" class="text-danger"></span>
               
                <div class="form-group">
                    <label asp-for="@Model.ServicesEnabled" class="control-label"></label>
                    <input asp-for="@Model.ServicesEnabled" class="form-control" value="@Model.ServicesEnabled" />
                    <span asp-validation-for="@Model.ServicesEnabled" class="text-danger"></span>
                </div>
                <input type="hidden" asp-for="@Model.Id" class="form-control" />
                <input type="hidden" asp-for="@Model.OrganizationId" class="form-control" />        
            <br />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
            
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        var i = 0;
        const contactListUrl = window.location.origin + "/ClientAccount/SearchForContact";
        $(document).ready(function () {
            makeContactInputs();
          if(@Model.PrimaryContacts?.Count() > 1){
              $("#add-primary").hide();
          }
        });

       const makeContactInputs = (() => {
           console.log("Make contact inputs");
          $(".contact-input").each(function () {
              $(this).autocomplete({
                source: contactListUrl,
                delay: 100
              });
            });
             $( ".contact-input" ).on( "autocompleteselect", function( event, ui ) {
            updateContactPerson(ui.item.label, event);
        } );
        });

       const updateContactPerson = ((displayName, e) => {
           console.log("update contact person");
          var url = `@Url.Action("GetAccountContact", "ClientAccount")` + `?displayName=${displayName}`;
          var xhr = new XMLHttpRequest();

          xhr.onreadystatechange = function () {
              if (this.readyState == 4 && this.status == 200) {
                  var data = JSON.parse(xhr.response);
                  var id = data.id;
                  var mail = data.mail;
                  var inputGroup = $(e.target); // .closest($('.form-group'));
            
                  // Use string selectors for siblings
                  inputGroup.siblings('.id-input').val(id);
                  inputGroup.siblings('.mail-input').val(mail);
              }
          };

          xhr.open('get', url);
          xhr.send();
      });

      const addSecondPrimary = (() => {
          var html = `<div class="form-group">
                       <input asp-for="contact_Person_DisplayName" name="displayNames" class="form-control contact-input" class="contactInput" placeholder="start entering surname to search" />
                       <input asp-for="contact_Person_ContactType" name="contactTypes" type="hidden" value="primary"/>
                       <input asp-for="contact_Person_PersonId" name="personIds" class="id-input" />
                       <input asp-for="contact_Person_Mail" name="emailAddresses" class="mail-input" />
                       <input asp-for="contact_Id" name="contactIds" class="contact-id-input" type="hidden" value="0"  />
                     </div>`;
           $("#primary-contacts").append(html);
          $("#add-primary").hide();
          makeContactInputs();
      }); 
    </script>
}
